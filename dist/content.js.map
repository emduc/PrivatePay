{
  "version": 3,
  "sources": ["../src/content.ts"],
  "sourcesContent": ["// Inject script file to avoid CSP issues\nconst script = document.createElement('script');\nscript.src = chrome.runtime.getURL('inject.js');\nscript.onload = function() {\n  this.remove();\n};\n\n// Inject before page loads\n(document.head || document.documentElement).appendChild(script);\n\n// Handle messages from the page\nwindow.addEventListener('message', async (event) => {\n  if (event.data.type === 'FROM_PAGE') {\n    const { method, params, id } = event.data;\n    \n    try {\n      let result;\n      \n      if (method === 'eth_requestAccounts') {\n        result = await chrome.runtime.sendMessage({ type: 'connect' });\n        result = result ? [result] : [];\n      } else if (method === 'eth_accounts') {\n        result = await chrome.runtime.sendMessage({ type: 'getAccounts' });\n        result = result ? [result] : [];\n      } else if (method === 'eth_chainId') {\n        result = '0x1';\n      } else if (method === 'net_version') {\n        result = '1';\n      } else if (method === 'personal_sign') {\n        const [message, address] = params || [];\n        result = await chrome.runtime.sendMessage({ \n          type: 'personalSign', \n          message, \n          address \n        });\n      } else if (method === 'eth_sendTransaction') {\n        const [txParams] = params || [];\n        result = await chrome.runtime.sendMessage({ \n          type: 'sendTransaction', \n          txParams \n        });\n      } else {\n        throw new Error('Unsupported method: ' + method);\n      }\n      \n      window.postMessage({\n        type: 'FROM_CONTENT',\n        method,\n        result,\n        id\n      }, '*');\n    } catch (error) {\n      window.postMessage({\n        type: 'FROM_CONTENT',\n        method,\n        error: error.message,\n        id\n      }, '*');\n    }\n  }\n});"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,MAAM,OAAO,QAAQ,OAAO,WAAW;AAC9C,aAAO,SAAS,WAAW;AACzB,aAAK,OAAO;AAAA,MACd;AAGA,OAAC,SAAS,QAAQ,SAAS,iBAAiB,YAAY,MAAM;AAG9D,aAAO,iBAAiB,WAAW,OAAO,UAAU;AAClD,YAAI,MAAM,KAAK,SAAS,aAAa;AACnC,gBAAM,EAAE,QAAQ,QAAQ,GAAG,IAAI,MAAM;AAErC,cAAI;AACF,gBAAI;AAEJ,gBAAI,WAAW,uBAAuB;AACpC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,UAAU,CAAC;AAC7D,uBAAS,SAAS,CAAC,MAAM,IAAI,CAAC;AAAA,YAChC,WAAW,WAAW,gBAAgB;AACpC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,cAAc,CAAC;AACjE,uBAAS,SAAS,CAAC,MAAM,IAAI,CAAC;AAAA,YAChC,WAAW,WAAW,eAAe;AACnC,uBAAS;AAAA,YACX,WAAW,WAAW,eAAe;AACnC,uBAAS;AAAA,YACX,WAAW,WAAW,iBAAiB;AACrC,oBAAM,CAAC,SAAS,OAAO,IAAI,UAAU,CAAC;AACtC,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH,WAAW,WAAW,uBAAuB;AAC3C,oBAAM,CAAC,QAAQ,IAAI,UAAU,CAAC;AAC9B,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAAA,YACH,OAAO;AACL,oBAAM,IAAI,MAAM,yBAAyB,MAAM;AAAA,YACjD;AAEA,mBAAO,YAAY;AAAA,cACjB,MAAM;AAAA,cACN;AAAA,cACA;AAAA,cACA;AAAA,YACF,GAAG,GAAG;AAAA,UACR,SAAS,OAAO;AACd,mBAAO,YAAY;AAAA,cACjB,MAAM;AAAA,cACN;AAAA,cACA,OAAO,MAAM;AAAA,cACb;AAAA,YACF,GAAG,GAAG;AAAA,UACR;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA;",
  "names": []
}
